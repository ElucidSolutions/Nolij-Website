/*
  This module defines the React component that
  represents the homepage services block.
*/

/*
  A React component that accepts four
  properties:

  * selected, a service ID string
  * serviceId, a service ID string
  * label, a string
  * activeIcon, a URL string that references
    an SVG file
  * inactiveIcon, a URL string that references
    an SVG file
  * onSelect, a function that accepts a
    service ID

  and returns a JSX element that represents a
  service named label having ID serviceId.
*/
class ServicesMenuItemComponent extends React.Component {
  constructor (props) {
    super (props);
    this.select = this.select.bind (this);
    this.isSelected = this.isSelected.bind (this);
  }

  select () {
    this.props.onSelect (this.props.serviceId);
  }

  isSelected () {
    return this.props.selected === this.props.serviceId;
  }

  render () {
    return <div
        class={'nolij-services-menu-item' + (this.props.selected === this.props.serviceId ? ' nolij-services-menu-item-selected' : '')}
        data-service-id={this.props.serviceId}
        onClick={this.select}
      >
        <div class="nolij-services-menu-item-icon">
          <img
            class="nolij-services-menu-item-icon-img"
            alt="Service icon"
            src={this.isSelected () ? this.props.activeIcon : this.props.inactiveIcon}
          />
        </div>
        <div class="nolij-services-menu-item-label">
          {this.props.label}
        </div>
        <div class="nolij-services-menu-item-toggle-icon">
          <img
            class="nolij-services-menu-item-toggle-icon-img"
            alt="Service toggle icon"
            src={this.isSelected () ?
              "/themes/elucid/components/services/images/close-icon.svg" :
              "/themes/elucid/components/services/images/expand-icon.svg"}
          />
        </div>
      </div>;
  }
}

/*
*/
function OperationsServicesMenuItemComponent (props) {
  return <ServicesMenuItemComponent
    selected={props.selected}
    serviceId="it-operations"
    label="Information Technology Solutions"
    activeIcon="/themes/elucid/components/services/images/it-operations-icon-active.svg"
    inactiveIcon="/themes/elucid/components/services/images/it-operations-icon-inactive.svg"
    onSelect={props.onSelect}
  />;
}

/*
*/
function MarketingServicesMenuItemComponent (props) {
  return <ServicesMenuItemComponent
    selected={props.selected}
    serviceId="software-development"
    label="Marketing Strategies"
    activeIcon="/themes/elucid/components/services/images/program-management-icon-active.svg"
    inactiveIcon="/themes/elucid/components/services/images/program-management-icon-inactive.svg"
    onSelect={props.onSelect}
  />;
}

/*
*/
function ManagementServicesMenuItemComponent (props) {
  return <ServicesMenuItemComponent
    selected={props.selected}
    serviceId="program-management"
    label="Management Consulting"
    activeIcon="/themes/elucid/components/services/images/acquisition-support-icon-active.svg"
    inactiveIcon="/themes/elucid/components/services/images/acquisition-support-icon-inactive.svg"
    onSelect={props.onSelect}
  />;
}

/*
*/
function SupportServicesMenuItemComponent (props) {
  return <ServicesMenuItemComponent
    selected={props.selected}
    serviceId="acquisition-support"
    label="Human Resource Management"
    activeIcon="/themes/elucid/components/services/images/human-capital-icon-active.svg"
    inactiveIcon="/themes/elucid/components/services/images/human-capital-icon-inactive.svg"
    onSelect={props.onSelect}
  />;
}

/*
*/
function TrainingServicesMenuItemComponent (props) {
  return <ServicesMenuItemComponent
    selected={props.selected}
    serviceId="training"
    label="Training and Course Development"
    activeIcon="/themes/elucid/components/services/images/training-icon-active.svg"
    inactiveIcon="/themes/elucid/components/services/images/training-icon-inactive.svg"
    onSelect={props.onSelect}
  />;
}

/*
  A React component that accepts two properties:

    * selected, a service ID string
    * onSelect, a callback function that accepts
      a service ID; 

  and returns a JSX element that represents the
  services menu component.
*/
class ServicesMenuComponent extends React.Component {
  constructor (props) {
    super (props);
  }

  render () {
    return <div class="nolij-services-menu-component">
        <ManagementServicesMenuItemComponent
          selected={this.props.selected}
          onSelect={this.props.onSelect}
        />
        <OperationsServicesMenuItemComponent
          selected={this.props.selected}
          onSelect={this.props.onSelect}
        />
        <TrainingServicesMenuItemComponent
          selected={this.props.selected}
          onSelect={this.props.onSelect}
        />
        <MarketingServicesMenuItemComponent
          selected={this.props.selected}
          onSelect={this.props.onSelect}
        />
        <SupportServicesMenuItemComponent
          selected={this.props.selected}
          onSelect={this.props.onSelect}
        />
      </div>;
  }
}

/*
  A React component accepts three properties:

  * selected, a service ID string
  * serviceId, a service ID string
  * label, a service title string

  and returns a JSX element that represents
  a service that contains the content.
*/
function ServicesDetailComponent (props) {
  return <div
      class={'nolij-services-detail' + (props.selected === props.serviceId ? ' nolij-services-detail-selected' : '')}
      data-service-id={props.serviceId}
    >
      <div class="nolij-services-detail-header">
        <h2 class="nolij-services-detail-title">{props.label}</h2>
      </div>
      <div class="nolij-services-detail-body">
        {props.children}
      </div>
    </div>;
}

function OperationsServicesDetailComponent (props) {
  return <ServicesDetailComponent
      selected={props.selected}
      serviceId="it-operations"
      label="Information Technology Solutions"
    >
      <p class="nolij-services-detail-lead">
        <ul>
          <li>System Design and Integration</li>
          <li>Software Development</li>
          <li>Systems Engineering</li>
          <li>Systems Architecture</li>
          <li>Software Testing</li>
          <li>Configuration Management</li>
          <li>Data Warehousing</li>
        </ul>
      </p>
    </ServicesDetailComponent>;
}

function MarketingServicesDetailComponent (props) {
  return <ServicesDetailComponent
      selected={props.selected}
      serviceId="software-development"
      label="Marketing Strategies"
    >
      <p class="nolij-services-detail-lead">
        <ul>
          <li>Branding & Messaging</li>
          <li>Strategic Communications</li>
          <li>Marketing Materials</li>
        </ul>
      </p>
    </ServicesDetailComponent>;
}

function ManagementServicesDetailComponent (props) {
  return <ServicesDetailComponent
      selected={props.selected}
      serviceId="program-management"
      label="Management Consulting"
    >
      <p class="nolij-services-detail-lead">
        <ul>
          <li>Project / Program Management</li>
          <li>Knowledge Management</li>
          <li>Change Management</li>
          <li>Process Analysis / Continuous Process Improvement</li>
          <li>Business Requirements</li>
          <li>Administrative and Logistics Support</li>
          <li>Governance Development & Support</li>
        </ul>
      </p>
    </ServicesDetailComponent>;
}

function SupportServicesDetailComponent (props) {
  return <ServicesDetailComponent
      selected={props.selected}
      serviceId="acquisition-support"
      label="Human Resource Management"
    >
      <p class="nolij-services-detail-lead">
        <ul>
          <li>Employee Relations</li>
          <li>Employee Recognition</li>
          <li>Performance Management</li>
          <li>Job Classification</li>
          <li>Payroll</li>
          <li>Benefits</li>
          <li>Workforce Planning</li>
        </ul>
      </p>
    </ServicesDetailComponent>;
}

function TrainingServicesDetailComponent (props) {
  return <ServicesDetailComponent
      selected={props.selected}
      serviceId="training"
      label="Training and Course Development"
    >
      <p class="nolij-services-detail-lead">
        <ul>
          <li>E-learning / Virtual Training</li>
          <li>Instructor Led Training</li>
          <li>Course & Training Materials Development</li>
          <li>Training Management</li>
        </ul>
      </p>
    </ServicesDetailComponent>;
}

/*
  A React component accepts one property:
  selected, a service ID string; and returns
  a JSX element that represents the services
  details component.
*/
function ServicesDetailsComponent (props) {
  return <div class="nolij-services-details">
      <ManagementServicesDetailComponent
        selected={props.selected}/>
      <OperationsServicesDetailComponent
        selected={props.selected}/>
      <TrainingServicesDetailComponent
        selected={props.selected}/>
      <MarketingServicesDetailComponent
        selected={props.selected}/>
      <SupportServicesDetailComponent
        selected={props.selected}/>
    </div>;
}


/*
  A React component that accepts no properties
  and returns a JSX element that represents the
  mobile (accordion) homepage services block.
*/
class ServicesMobileComponent extends React.Component {
  constructor (props) {
    super (props);
    this.componentElement = React.createRef ();
    this.getDetailElement = this.getDetailElement.bind (this);
    this.expand = this.expand.bind (this);
    this.select = this.select.bind (this);
  }

  getDetailElements () {
    return jQuery('.nolij-services-detail', this.componentElement.current);
  }

  getDetailElement (serviceId) {
    return jQuery('.nolij-services-detail[data-service-id="' + serviceId + '"]', this.componentElement.current);
  }

  closeAll () {
    this.getDetailElements ().slideUp ();
  }

  expand (serviceId) {
    this.getDetailElement (serviceId).slideDown ();
  }

  select (serviceId) {
    this.props.onSelect (serviceId);
  }

  componentDidMount () {
    this.closeAll ();
    this.expand (this.props.selected);
  }

  componentDidUpdate (prevProps) {
    if (prevProps.selected === this.props.selected) {
      return;
    }
    this.closeAll ();
    this.expand (this.props.selected);
  }

  render () {
    return <div
      class="nolij-services-mobile-component"
      ref={this.componentElement}
    >
      <ManagementServicesMenuItemComponent
        selected={this.props.selected}
        onSelect={this.select}/>
      <ManagementServicesDetailComponent
        selected={this.props.selected}/>
      <OperationsServicesMenuItemComponent
        selected={this.props.selected}
        onSelect={this.select}/>
      <OperationsServicesDetailComponent
        selected={this.props.selected}/>
      <TrainingServicesMenuItemComponent
        selected={this.props.selected}
        onSelect={this.select}/>
      <TrainingServicesDetailComponent
        selected={this.props.selected}/>
      <MarketingServicesMenuItemComponent
        selected={this.props.selected}
        onSelect={this.select}/>
      <MarketingServicesDetailComponent
        selected={this.props.selected}/>
      <SupportServicesMenuItemComponent
        selected={this.props.selected}
        onSelect={this.select}/>
      <SupportServicesDetailComponent
        selected={this.props.selected}/>
    </div>;
  }
}

/*
  A React component that accepts no properties
  and returns a JSX element that represents the
  homepage services block.
*/
class ServicesComponent extends React.Component {
  constructor (props) {
    super (props);
    this.state = {
      'selected': 'program-management'
    };
    this.select = this.select.bind (this);
  }

  select (serviceId) {
    this.setState ({
      'selected': serviceId
    });
  }

  render () {
    return <div id="services" data-nolij-id="services" class="nolij-services-container">
        <div class="nolij-services-component">
          <div class="nolij-services-header">
            <h2 class="nolij-services-title">Our Services</h2>
          </div>
          <div class="nolij-services-body">
            <p class="nolij-services-lead">Nolij Consulting LLC is an <strong>Economically Disadvantaged Woman Owned Small Business (EDWOSB)</strong> located in Northern Virginia. We have capabilities in strategy, technology, and human capital projects. We are focused on providing competitive rates and quality services to our clients in the federal healthcare marketplace. Our mission is to understand the challenges and goals of our clients, address them with innovative business solutions, and work closely together to achieve project success.</p>
            <div class="nolij-services-table">
              <div class="nolij-services-table-left">
                <ServicesMenuComponent
                  selected={this.state.selected}
                  onSelect={this.select}
                />
              </div>
              <div class="nolij-services-table-right">
                <ServicesDetailsComponent
                  selected={this.state.selected}
                />
              </div>
            </div>
            <ServicesMobileComponent
              selected={this.state.selected}
              onSelect={this.select}
            />
          </div>
        </div>
      </div>;
  }
}
